
# rename me to config.txt

# 0 is MSSQL | 1 is mysql
$usemysql = 0;

# optimize mysql tables every X hours (0 for disabling)
$optimizemysqltables = 2;

# DB Settings
# for MySQL simply insert the hostname / IP
$dbhost = 'HOMESERVER-PC\SQLEXPRESS';
$dbname = 'MpTvDb';
# for mysql root | for mssql sa
$dbuser = 'sa';
# standard password when mediaportal has installed the Database Engine is MediaPortal
$dbpw = 'MediaPortal';

# 4tr (4therecord)
$use4tr = 0; # on/off
# we use the database data from above
$dbname_4tr = 'fortherecord';

# activate search on wunschliste.de / only GERMAN
$use_wunschliste = 1;

# activate search on fernsehserien / only GERMAN
$use_fernsehserien = 1;

# activate search on thetvdb.com
$use_tv_tb = 1;
# TVDB (www.thetvdb.com) API Key - NOT Account Identifier
# you can create your own API key in your account on www.thetvdb.com
# if you leave this field blank it would use a global API key
# so this is optional
$tvdb_apikey = '';
$thetvdb_language = 'de'; # language for thetvdb 2 Character ISO Code like (de, en, nl, dk, ...)

# episodename substitutions
# here you can define substitiutions for your episodenames
# f.e. "1" to "one"
# f.e. "part1" to "one"
# this avoids problems with different namings
# you can use regex on the left side here if you want
%episode_stubstitutions = (
	'Teil\s+\(1\)' => '(1)',
	'Teil\s+\(2\)' => '(2)',
	'Teil\s+\(3\)' => '(3)',
	'Teil\s+\(4\)' => '(4)',
	'Teil\s+1' => '(1)',
	'Teil\s+2' => '(2)',
	'Teil\s+3' => '(3)',
	'Teil\s+4' => '(4)',
	' & ' => ' und ',
	' and ' => ' und ',
);

# database backup every X hours
$db_backup = 1; # on/off
$db_backup_interval = 2; # in hours
$db_backup_delete = 48; # delete backups older than
$db_backup_sqlite_path = 'O:\DB\*.db3';
$db_backup_sqlite_backuppath = 'O:\DB\backup';

# remove recordings which are also listed at tvseries
$cleanup_recordings_tvseries = 1; # on / off
$cleanup_recordings_tvseries_db = 'O:\\DB\\TVSeriesDatabase4.db3';
$cleanup_recordings_tvseries_db_mainpath = '\\\\192.168.178.100\\mp.data\\VID\\';
$cleanup_recordings_tvseries_recordings_mainpath = 'O:\\VID\\';

# delete recordings from the recordings DB of MP when the file does not exist
$cleanup_recordingdb = 0; # on / off

# delete empty folders and deletes .xml, .txt, .logo, .jpg files (if the .ts file is removed) in recordingdir
$cleanup_recordingfiles = 0;
# folder where the recordings are stored
$cleanup_recordingdir = 'O:\VID';

# use thumb generation?
$thumbs = 0;
# create thumbs for the following folders and subfolders
@thumb_dirs = ('O:\VID', 'D:\VID123\ABC');
# try to crrate thumb for tiles with the following file extensions
@thumb_fileext = ('.ts', '.avi', '.mkv');
# use the following programs to create thumbs
@thumb_progs = ( {
                   # internal MTN
                   prog => 'mtn\\mtn.exe -D 6 -B 420 -E 600 -c 1 -r 1 -s 300 -t -i -w 0 -n -P "${filename}"',
                   thumb_filename => '${basedir}\\${basefile}_s.jpg',
                   timeout => 10,
                  },
                  {
                   # external videoLAN
                   prog => '"C:\Program Files (x86)\VideoLAN\VLC\vlc.exe" --video-filter scene -V dummy --intf dummy --dummy-quiet --scene-width=-1 --scene-height=576 --scene-format=jpg --scene-replace --scene-ratio 24 --start-time=600 --stop-time=601 --scene-replace --scene-prefix=thumb --scene-path="O:\\" "${filename}" "vlc://quit"',
                   thumb_filename => 'O:\\thumb.jpg',
                   timeout => 3,
                  },
                  {
                   # internal MTN variant 2
                   prog => 'mtn\\mtn.exe -D 8 -B   0 -E   0 -c 1 -r 1 -s  60 -t -i -w 0 -n -P "${filename}"',
                   thumb_filename => '${basedir}\\${basefile}_s.jpg',
                   timeout => 10,
                  }
                );

# you can setup here the running of external commands every X hours
# example:
# run C:\path\tool every 5 hours and C:\path2\tool2 every 10 hours
# @run_external_commans = ('C:\path\tool|5', 'C:\path2\tool2|10');
@run_external_commans = ();

# after each run sleep for x seconds
$sleep = 60;

1;